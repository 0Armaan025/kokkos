ifndef KOKKOS_PATH
  MAKEFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))
  KOKKOS_PATH = $(subst Makefile,,$(MAKEFILE_PATH))../..
endif

PREFIX ?= /usr/local/lib/kokkos

# These files are generated by this makefile
gen_makefile=Makefile.kokkos
gen_cmakefile=gen_kokkos.cmake

default: messages build-lib
	echo "End Build"

ifneq (,$(findstring Cuda,$(KOKKOS_DEVICES)))
  CXX ?= $(KOKKOS_PATH)/bin/nvcc_wrapper
else
  CXX ?= g++
endif

CXXFLAGS ?= -O3
LINK ?= $(CXX)
LDFLAGS ?=

include $(KOKKOS_PATH)/Makefile.kokkos

PWD = $(shell pwd)

KOKKOS_HEADERS_INCLUDE       = $(wildcard $(KOKKOS_PATH)/core/src/*.hpp)
KOKKOS_HEADERS_INCLUDE_IMPL  = $(wildcard $(KOKKOS_PATH)/core/src/impl/*.hpp)
KOKKOS_HEADERS_INCLUDE      += $(wildcard $(KOKKOS_PATH)/containers/src/*.hpp)
KOKKOS_HEADERS_INCLUDE_IMPL += $(wildcard $(KOKKOS_PATH)/containers/src/impl/*.hpp)
KOKKOS_HEADERS_INCLUDE      += $(wildcard $(KOKKOS_PATH)/algorithms/src/*.hpp)

CONDITIONAL_COPIES =

ifeq ($(KOKKOS_INTERNAL_USE_CUDA), 1)
  KOKKOS_HEADERS_CUDA += $(wildcard $(KOKKOS_PATH)/core/src/Cuda/*.hpp)
  CONDITIONAL_COPIES += copy-cuda
endif

ifeq ($(KOKKOS_INTERNAL_USE_PTHREADS), 1)
  KOKKOS_HEADERS_THREADS += $(wildcard $(KOKKOS_PATH)/core/src/Threads/*.hpp)
  CONDITIONAL_COPIES += copy-threads
endif

ifeq ($(KOKKOS_INTERNAL_USE_QTHREADS), 1)
  KOKKOS_HEADERS_QTHREADS += $(wildcard $(KOKKOS_PATH)/core/src/Qthreads/*.hpp)
  CONDITIONAL_COPIES += copy-qthreads
endif

ifeq ($(KOKKOS_INTERNAL_USE_OPENMP), 1)
  KOKKOS_HEADERS_OPENMP += $(wildcard $(KOKKOS_PATH)/core/src/OpenMP/*.hpp)
  CONDITIONAL_COPIES += copy-openmp
endif

ifeq ($(KOKKOS_OS),CYGWIN)
  COPY_FLAG = -u
endif
ifeq ($(KOKKOS_OS),Linux)
  COPY_FLAG = -u
endif
ifeq ($(KOKKOS_OS),Darwin)
  COPY_FLAG =
endif

ifeq ($(KOKKOS_DEBUG),"no")
  KOKKOS_DEBUG_CMAKE = OFF
else
  KOKKOS_DEBUG_CMAKE = ON
endif

messages:
	echo "Start Build"

# Functions for generating makefile and cmake file
# In calling these routines, do not put space after ,
# e.g., $(call wrtvar,KOKKOS_PATH,$(PREFIX))
wrtstrmak = echo $1 >> $(gen_makefile)
wrtstrcmk = echo $1 >> $(gen_cmakefile)

wrtmak = echo $1 = $($(1)) >> $(gen_makefile)
wrtmk2 = echo $1 ?= $($(1)) >> $(gen_makefile)
wrtcmk = echo set\($1 $($(1)) CACHE $2\) >> $(gen_cmakefile)
wrtmakval = echo $1 = $2 >> $(gen_makefile)
wrtcmkval = echo set\($1 $2 CACHE $3\) >> $(gen_cmakefile)

wrtstr = $(call wrtstrmak,$1); $(call wrtstrcmk,$1)
wrtvar = $(call wrtmak,$1); $(call wrtcmk,$1,$2)
wrtvr2 = $(call wrtmk2,$1); $(call wrtcmk,$1,$2)
wrtvarval = $(call wrtmakval,$1,$2); $(call wrtcmkval,$1,$2,$3)


build-makefile-cmake-kokkos: $(gen_header)
	@rm -f $(gen_makefile)
	@rm -f $(gen_cmakefile)
	@$(call wrtstr, "#Global Settings used to generate this library")
	@$(call wrtvarval,KOKKOS_PATH,$(PREFIX),'FILEPATH "Kokkos installation path"')
	@$(call wrtvar,KOKKOS_DEVICES,'STRING "Kokkos devices list"')
	@$(call wrtvar,KOKKOS_ARCH,'STRING "Kokkos architecture flags"')
	@$(call wrtmak,KOKKOS_DEBUG)
	@$(call wrtcmk,KOKKOS_DEBUG_CMAKE,'BOOL "Kokkos debug enabled ?"')
	@$(call wrtvar,KOKKOS_USE_TPLS,'STRING "Kokkos templates list"')
	@$(call wrtvar,KOKKOS_CXX_STANDARD,'STRING "Kokkos C++ standard"')
	@$(call wrtvar,KOKKOS_OPTIONS,'STRING "Kokkos options"')
	@$(call wrtvar,KOKKOS_CUDA_OPTIONS,'STRING "Kokkos Cuda options"')
	@$(call wrtstrcmk,'if(NOT $$ENV{CXX})')
	@$(call wrtstrcmk,'  message(WARNING "You are currently using compiler $${CMAKE_CXX_COMPILER} while Kokkos was built with $(CXX) ; make sure this is the behavior you intended to be.")')
	@$(call wrtstrcmk,'endif()')
	@$(call wrtmak,CXX)  #TODO: Check this
	@$(call wrtstrcmk,"if(NOT DEFINED ENV{NVCC_WRAPPER})")
	@$(call wrtvr2,NVCC_WRAPPER,'FILEPATH "Path to command nvcc_wrapper"')
	@$(call wrtstrcmk,"else()")
	@$(call wrtstrcmk,'  set(NVCC_WRAPPER $$ENV{NVCC_WRAPPER} CACHE FILEPATH "Path to command nvcc_wrapper")')
	@$(call wrtstrcmk,"endif()")
	@$(call wrtstr,"")
	@$(call wrtstr,"#Source and Header files of Kokkos relative to KOKKOS_PATH")
	@$(call wrtvar,KOKKOS_HEADERS,'STRING "Kokkos headers list"')
	@$(call wrtvar,KOKKOS_SRC,'STRING "Kokkos source list"')
	@$(call wrtstr,"")
	@$(call wrtstr,"#Variables used in application Makefiles")
	@$(call wrtvar,KOKKOS_OS,'STRING ""')  # This was not in original cmake gen
	@$(call wrtvar,KOKKOS_CPP_DEPENDS,'STRING ""')
	@$(call wrtvar,KOKKOS_CXXFLAGS,'STRING ""')
	@$(call wrtvar,KOKKOS_CPPFLAGS,'STRING ""')
	@$(call wrtvar,KOKKOS_LINK_DEPENDS,'STRING ""')
	@$(call wrtvar,KOKKOS_LIBS,'STRING ""')
	@$(call wrtvar,KOKKOS_LDFLAGS,'STRING ""')
	@$(call wrtstr,"")
	@$(call wrtstr,"#Internal settings which need to propagated for Kokkos examples")
	@$(call wrtvar,KOKKOS_INTERNAL_USE_CUDA,'STRING ""')
	@$(call wrtvar,KOKKOS_INTERNAL_USE_OPENMP,'STRING ""')
	@$(call wrtvar,KOKKOS_INTERNAL_USE_PTHREADS,'STRING ""')
	@$(call wrtvar,KOKKOS_INTERNAL_USE_QTHREADS,'STRING ""') # Not in original cmake gen
	@$(call wrtstrcmk "mark_as_advanced(KOKKOS_HEADERS KOKKOS_SRC KOKKOS_INTERNAL_USE_CUDA KOKKOS_INTERNAL_USE_OPENMP KOKKOS_INTERNAL_USE_PTHREADS)")
	@$(call wrtstrmak,"")
	@$(call wrtstrmak,"#Fake kokkos-clean target")
	@$(call wrtstrmak,"kokkos-clean:")
	@$(call wrtstrmak,"")
	@sed \
		-e 's|$(KOKKOS_PATH)/core/src|$(PREFIX)/include|g' \
		-e 's|$(KOKKOS_PATH)/containers/src|$(PREFIX)/include|g' \
		-e 's|$(KOKKOS_PATH)/algorithms/src|$(PREFIX)/include|g' \
		-e 's|-L$(PWD)|-L$(PREFIX)/lib|g' \
		-e 's|= libkokkos.a|= $(PREFIX)/lib/libkokkos.a|g' \
		-e 's|= KokkosCore_config.h|= $(PREFIX)/include/KokkosCore_config.h|g' $(gen_makefile) \
		> $(gen_makefile).tmp
	@mv -f $(gen_makefile).tmp $(gen_makefile)
# Don't do this
#	@sed \
#		-e 's|$(KOKKOS_PATH)/core/src|$(PREFIX)/include|g' \
#	 	-e 's|$(KOKKOS_PATH)/containers/src|$(PREFIX)/include|g' \
#	 	-e 's|$(KOKKOS_PATH)/algorithms/src|$(PREFIX)/include|g' \
#	 	-e 's|-L$(PWD)|-L$(PREFIX)/lib|g' \
#	 	-e 's|= libkokkos.a|= $(PREFIX)/lib/libkokkos.a|g' \
#	 	-e 's|= KokkosCore_config.h|= $(PREFIX)/include/KokkosCore_config.h|g' $(gen_cmakefile)	 	> $(gen_cmakefile).tmp
#	@mv -f $(gen_cmakefile).tmp $(gen_cmakefile)

build-lib: build-makefile-cmake-kokkos $(KOKKOS_LINK_DEPENDS)

mkdir:
	mkdir -p $(PREFIX)
	mkdir -p $(PREFIX)/bin
	mkdir -p $(PREFIX)/include
	mkdir -p $(PREFIX)/lib
	mkdir -p $(PREFIX)/include/impl

copy-cuda: mkdir
	mkdir -p $(PREFIX)/include/Cuda
	cp $(COPY_FLAG) $(KOKKOS_HEADERS_CUDA) $(PREFIX)/include/Cuda

copy-threads: mkdir
	mkdir -p $(PREFIX)/include/Threads
	cp $(COPY_FLAG) $(KOKKOS_HEADERS_THREADS) $(PREFIX)/include/Threads

copy-qthreads: mkdir
	mkdir -p $(PREFIX)/include/Qthreads
	cp $(COPY_FLAG) $(KOKKOS_HEADERS_QTHREADS) $(PREFIX)/include/Qthreads

copy-openmp: mkdir
	mkdir -p $(PREFIX)/include/OpenMP
	cp $(COPY_FLAG) $(KOKKOS_HEADERS_OPENMP) $(PREFIX)/include/OpenMP

install: mkdir $(CONDITIONAL_COPIES) build-lib
	cp $(COPY_FLAG) $(NVCC_WRAPPER) $(PREFIX)/bin
	cp $(COPY_FLAG) $(KOKKOS_HEADERS_INCLUDE) $(PREFIX)/include
	cp $(COPY_FLAG) $(KOKKOS_HEADERS_INCLUDE_IMPL) $(PREFIX)/include/impl
	cp $(COPY_FLAG) $(gen_makefile)  $(PREFIX)
	cp $(COPY_FLAG) $(gen_cmakefile) $(PREFIX)
	cp $(COPY_FLAG) libkokkos.a $(PREFIX)/lib
	cp $(COPY_FLAG) KokkosCore_config.h $(PREFIX)/include

clean: kokkos-clean
	rm -f $(gen_makefile) $(gen_cmakefile) 
