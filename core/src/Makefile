ifndef KOKKOS_PATH
  MAKEFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))
  KOKKOS_PATH = $(subst Makefile,,$(MAKEFILE_PATH))../..
endif

PREFIX ?= /usr/local/lib/kokkos

# These files are generated by this makefile
KOKKOS_MAKEFILE=Makefile.kokkos
KOKKOS_CMAKEFILE=gen_kokkos.cmake

default: messages build-lib
	echo "End Build"

ifneq (,$(findstring Cuda,$(KOKKOS_DEVICES)))
  CXX ?= $(KOKKOS_PATH)/bin/nvcc_wrapper
else
  CXX ?= g++
endif

CXXFLAGS ?= -O3
LINK ?= $(CXX)
LDFLAGS ?=

include $(KOKKOS_PATH)/Makefile.kokkos

PWD = $(shell pwd)

KOKKOS_HEADERS_INCLUDE       = $(wildcard $(KOKKOS_PATH)/core/src/*.hpp)
KOKKOS_HEADERS_INCLUDE_IMPL  = $(wildcard $(KOKKOS_PATH)/core/src/impl/*.hpp)
KOKKOS_HEADERS_INCLUDE      += $(wildcard $(KOKKOS_PATH)/containers/src/*.hpp)
KOKKOS_HEADERS_INCLUDE_IMPL += $(wildcard $(KOKKOS_PATH)/containers/src/impl/*.hpp)
KOKKOS_HEADERS_INCLUDE      += $(wildcard $(KOKKOS_PATH)/algorithms/src/*.hpp)

CONDITIONAL_COPIES =

ifeq ($(KOKKOS_INTERNAL_USE_CUDA), 1)
  KOKKOS_HEADERS_CUDA += $(wildcard $(KOKKOS_PATH)/core/src/Cuda/*.hpp)
  CONDITIONAL_COPIES += copy-cuda
endif

ifeq ($(KOKKOS_INTERNAL_USE_PTHREADS), 1)
  KOKKOS_HEADERS_THREADS += $(wildcard $(KOKKOS_PATH)/core/src/Threads/*.hpp)
  CONDITIONAL_COPIES += copy-threads
endif

ifeq ($(KOKKOS_INTERNAL_USE_QTHREADS), 1)
  KOKKOS_HEADERS_QTHREADS += $(wildcard $(KOKKOS_PATH)/core/src/Qthreads/*.hpp)
  CONDITIONAL_COPIES += copy-qthreads
endif

ifeq ($(KOKKOS_INTERNAL_USE_OPENMP), 1)
  KOKKOS_HEADERS_OPENMP += $(wildcard $(KOKKOS_PATH)/core/src/OpenMP/*.hpp)
  CONDITIONAL_COPIES += copy-openmp
endif

ifeq ($(KOKKOS_OS),CYGWIN)
  COPY_FLAG = -u
endif
ifeq ($(KOKKOS_OS),Linux)
  COPY_FLAG = -u
endif
ifeq ($(KOKKOS_OS),Darwin)
  COPY_FLAG =
endif

ifeq ($(KOKKOS_DEBUG),"no")
  KOKKOS_DEBUG_CMAKE = OFF
else
  KOKKOS_DEBUG_CMAKE = ON
endif

messages:
	echo "Start Build"

# Functions for generating makefile and cmake file
# In calling these routines, do not put space after ,
# e.g., $(call kokkos_append_var,KOKKOS_PATH,$(PREFIX))
kokkos_append_makefile = echo $1 >> $(KOKKOS_MAKEFILE)
kokkos_append_cmakefile = echo $1 >> $(KOKKOS_CMAKEFILE)

kokkos_appendvar_makefile = echo $1 = $($(1)) >> $(KOKKOS_MAKEFILE)
kokkos_appendvar2_makefile = echo $1 ?= $($(1)) >> $(KOKKOS_MAKEFILE)
kokkos_appendvar_cmakefile = echo set\($1 $($(1)) CACHE $2\) >> $(KOKKOS_CMAKEFILE)
kokkos_appendval_makefile = echo $1 = $2 >> $(KOKKOS_MAKEFILE)
kokkos_appendval_cmakefile = echo set\($1 $2 CACHE $3\) >> $(KOKKOS_CMAKEFILE)

kokkos_append_string = $(call kokkos_append_makefile,$1); $(call kokkos_append_cmakefile,$1)
kokkos_append_var = $(call kokkos_appendvar_makefile,$1); $(call kokkos_appendvar_cmakefile,$1,$2)
kokkos_append_var2 = $(call kokkos_appendvar2_makefile,$1); $(call kokkos_appendvar_cmakefile,$1,$2)
kokkos_append_varval = $(call kokkos_appendval_makefile,$1,$2); $(call kokkos_appendval_cmakefile,$1,$2,$3)


build-makefile-cmake-kokkos: $(KOKKOS_CONFIG_HEADER)
	@rm -f $(KOKKOS_MAKEFILE)
	@rm -f $(KOKKOS_CMAKEFILE)
	@$(call kokkos_append_string, "#Global Settings used to generate this library")
	@$(call kokkos_append_varval,KOKKOS_PATH,$(PREFIX),'FILEPATH "Kokkos installation path"')
	@$(call kokkos_append_var,KOKKOS_DEVICES,'STRING "Kokkos devices list"')
	@$(call kokkos_append_var,KOKKOS_ARCH,'STRING "Kokkos architecture flags"')
	@$(call kokkos_appendvar_makefile,KOKKOS_DEBUG)
	@$(call kokkos_appendvar_cmakefile,KOKKOS_DEBUG_CMAKE,'BOOL "Kokkos debug enabled ?"')
	@$(call kokkos_append_var,KOKKOS_USE_TPLS,'STRING "Kokkos templates list"')
	@$(call kokkos_append_var,KOKKOS_CXX_STANDARD,'STRING "Kokkos C++ standard"')
	@$(call kokkos_append_var,KOKKOS_OPTIONS,'STRING "Kokkos options"')
	@$(call kokkos_append_var,KOKKOS_CUDA_OPTIONS,'STRING "Kokkos Cuda options"')
	@$(call kokkos_appendvar2,CXX,'KOKKOS C++ Compiler')
	@$(call kokkos_append_cmakefile,"if(NOT DEFINED ENV{NVCC_WRAPPER})")
	@$(call kokkos_append_var2,NVCC_WRAPPER,'FILEPATH "Path to command nvcc_wrapper"')
	@$(call kokkos_append_cmakefile,"else()")
	@$(call kokkos_append_cmakefile,'  set(NVCC_WRAPPER $$ENV{NVCC_WRAPPER} CACHE FILEPATH "Path to command nvcc_wrapper")')
	@$(call kokkos_append_cmakefile,"endif()")
	@$(call kokkos_append_string,"")
	@$(call kokkos_append_string,"#Source and Header files of Kokkos relative to KOKKOS_PATH")
	@$(call kokkos_append_var,KOKKOS_HEADERS,'STRING "Kokkos headers list"')
	@$(call kokkos_append_var,KOKKOS_SRC,'STRING "Kokkos source list"')
	@$(call kokkos_append_string,"")
	@$(call kokkos_append_string,"#Variables used in application Makefiles")
	@$(call kokkos_append_var,KOKKOS_OS,'STRING ""')  # This was not in original cmake gen
	@$(call kokkos_append_var,KOKKOS_CPP_DEPENDS,'STRING ""')
	@$(call kokkos_append_var,KOKKOS_CXXFLAGS,'STRING ""')
	@$(call kokkos_append_var,KOKKOS_CPPFLAGS,'STRING ""')
	@$(call kokkos_append_var,KOKKOS_LINK_DEPENDS,'STRING ""')
	@$(call kokkos_append_var,KOKKOS_LIBS,'STRING ""')
	@$(call kokkos_append_var,KOKKOS_LDFLAGS,'STRING ""')
	@$(call kokkos_append_string,"")
	@$(call kokkos_append_string,"#Internal settings which need to propagated for Kokkos examples")
	@$(call kokkos_append_var,KOKKOS_INTERNAL_USE_CUDA,'STRING ""')
	@$(call kokkos_append_var,KOKKOS_INTERNAL_USE_OPENMP,'STRING ""')
	@$(call kokkos_append_var,KOKKOS_INTERNAL_USE_PTHREADS,'STRING ""')
	@$(call kokkos_append_var,KOKKOS_INTERNAL_USE_QTHREADS,'STRING ""') # Not in original cmake gen
	@$(call kokkos_append_cmakefile "mark_as_advanced(KOKKOS_HEADERS KOKKOS_SRC KOKKOS_INTERNAL_USE_CUDA KOKKOS_INTERNAL_USE_OPENMP KOKKOS_INTERNAL_USE_PTHREADS)")
	@$(call kokkos_append_makefile,"")
	@$(call kokkos_append_makefile,"#Fake kokkos-clean target")
	@$(call kokkos_append_makefile,"kokkos-clean:")
	@$(call kokkos_append_makefile,"")
	@sed \
		-e 's|$(KOKKOS_PATH)/core/src|$(PREFIX)/include|g' \
		-e 's|$(KOKKOS_PATH)/containers/src|$(PREFIX)/include|g' \
		-e 's|$(KOKKOS_PATH)/algorithms/src|$(PREFIX)/include|g' \
		-e 's|-L$(PWD)|-L$(PREFIX)/lib|g' \
		-e 's|= libkokkos.a|= $(PREFIX)/lib/libkokkos.a|g' \
		-e 's|= $(KOKKOS_CONFIG_HEADER)|= $(PREFIX)/include/$(KOKKOS_CONFIG_HEADER)|g' $(KOKKOS_MAKEFILE) \
		> $(KOKKOS_MAKEFILE).tmp
	@mv -f $(KOKKOS_MAKEFILE).tmp $(KOKKOS_MAKEFILE)

build-lib: build-makefile-cmake-kokkos $(KOKKOS_LINK_DEPENDS)

mkdir:
	mkdir -p $(PREFIX)
	mkdir -p $(PREFIX)/bin
	mkdir -p $(PREFIX)/include
	mkdir -p $(PREFIX)/lib
	mkdir -p $(PREFIX)/include/impl

copy-cuda: mkdir
	mkdir -p $(PREFIX)/include/Cuda
	cp $(COPY_FLAG) $(KOKKOS_HEADERS_CUDA) $(PREFIX)/include/Cuda

copy-threads: mkdir
	mkdir -p $(PREFIX)/include/Threads
	cp $(COPY_FLAG) $(KOKKOS_HEADERS_THREADS) $(PREFIX)/include/Threads

copy-qthreads: mkdir
	mkdir -p $(PREFIX)/include/Qthreads
	cp $(COPY_FLAG) $(KOKKOS_HEADERS_QTHREADS) $(PREFIX)/include/Qthreads

copy-openmp: mkdir
	mkdir -p $(PREFIX)/include/OpenMP
	cp $(COPY_FLAG) $(KOKKOS_HEADERS_OPENMP) $(PREFIX)/include/OpenMP

install: mkdir $(CONDITIONAL_COPIES) build-lib
	cp $(COPY_FLAG) $(NVCC_WRAPPER) $(PREFIX)/bin
	cp $(COPY_FLAG) $(KOKKOS_HEADERS_INCLUDE) $(PREFIX)/include
	cp $(COPY_FLAG) $(KOKKOS_HEADERS_INCLUDE_IMPL) $(PREFIX)/include/impl
	cp $(COPY_FLAG) $(KOKKOS_MAKEFILE)  $(PREFIX)
	cp $(COPY_FLAG) $(KOKKOS_CMAKEFILE) $(PREFIX)
	cp $(COPY_FLAG) libkokkos.a $(PREFIX)/lib
	cp $(COPY_FLAG) $(KOKKOS_CONFIG_HEADER) $(PREFIX)/include

clean: kokkos-clean
	rm -f $(KOKKOS_MAKEFILE) $(KOKKOS_CMAKEFILE) 
